#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                             Michael A.G. Aivazis
#                      California Institute of Technology
#                      (C) 1998-2005  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from vnf.components.Actor import Actor, action_link, actionRequireAuthentication, AuthenticationError
from vnf.weaver import action_href

routine2menu = {
    'start': 'start',
    'select_instrument': 'instrument',
    'configure_instrument': 'instrument',
    'sample_preparation': 'sample',
    'sample_environment': 'sample_environment',
    'kernel_origin': 'kernel_origin',
    'gulp_dynamics': 'gulp_dynamics',
    'experiment_parameters': 'experiment_parameters',
    'pick_computation_server': 'submit_experiment',
    }

def portlet(app):
    import opal.content
    portlet = opal.content.portlet(title="navigation", id="portlet-navigation-tree")

    start = portlet.item(description="Start")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'start',
        id = app.actor.inventory.id,
        )
    start.target = action_href(action, app.cgihome)
    start.icon = "images/link_icon.gif"
    start.type = "navItem"

    instrument = portlet.item(description="Select instrument")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'select_instrument',
        id = app.actor.inventory.id,
        )
    instrument.target = action_href(action, app.cgihome)
    instrument.icon = "images/link_icon.gif"
    instrument.type = "navItem"
    
    sample = portlet.item(description="Sample preparation")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'sample_preparation',
        id = app.actor.inventory.id,
        )
    sample.target = action_href(action, app.cgihome)
    sample.icon = "images/link_icon.gif"
    sample.type = "navItem"
    
    sample_environment = portlet.item(description="Sample environment")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'sample_environment',
        id = app.actor.inventory.id,
        )
    sample_environment.target = action_href(action, app.cgihome)
    sample_environment.icon = "images/link_icon.gif"
    sample_environment.type = "navItem"
    
    kernel_origin = portlet.item(description="Kernel origin")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'kernel_origin',
        id = app.actor.inventory.id,
        )
    kernel_origin.target = action_href(action, app.cgihome)
    kernel_origin.icon = "images/link_icon.gif"
    kernel_origin.type = "navItem"
    
    gulp_dynamics = portlet.item(description="Gulp dynamics")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'gulp_dynamics',
        id = app.actor.inventory.id,
        )
    gulp_dynamics.target = action_href(action, app.cgihome)
    gulp_dynamics.icon = "images/link_icon.gif"
    gulp_dynamics.type = "navItem"
        
    experiment_parameters = portlet.item(description="Experiment parameters")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'experiment_parameters',
        id = app.actor.inventory.id,
        )
    experiment_parameters.target = action_href(action, app.cgihome)
    experiment_parameters.icon = "images/link_icon.gif"
    experiment_parameters.type = "navItem"
    
    submit_experiment = portlet.item(description="Pick computation server")
    action = actionRequireAuthentication(
        actor = 'neutronexperimentwizard', sentry = app.sentry,
        routine = 'pick_computation_server',
        id = app.actor.inventory.id,
        )
    submit_experiment.target = action_href(action, app.cgihome)
    submit_experiment.icon = "images/link_icon.gif"
    submit_experiment.type = "navItem"

    routine = app.routine
    menu = routine2menu[ routine ]
    if menu:
        selected_menu = eval( menu )
        selected_menu.icon = "images/selectedlink_icon.gif"
    return portlet


# version
__id__ = "$Id: navigation.odb,v 1.1.1.1 2006-11-27 00:09:19 aivazis Exp $"

# End of file 
