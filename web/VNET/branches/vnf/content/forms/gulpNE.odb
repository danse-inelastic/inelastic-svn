# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base


class Form( base ):

    class Inventory( base.Inventory ):

        import pyre.inventory as inv
        gulpHarmonic = inv.bool('gulpHarmonic',default=True)
        #gulpHarmonic.help = 'Gulp Harmonic Motion'
        gulpNE = inv.bool('gulpNE', default = False)
        mmtkNE = inv.bool('mmtkNE', default = False)
    
        vaspPhon = inv.bool('vaspPhon', default = False)
        abinitPhon = inv.bool('abinitPhon', default = False)
        
        phononDispersions = inv.bool('phononDispersions', default = False)

    #parameters = ['gulpHarmonic','gulpNE','mmtkNE','vaspPhon','abinitPhon','phononDispersion'] # parameters to edit in the form
    parameters = ['gulpHarmonic','gulpNE']
    
    def legend(self):
        'return a legend string'
        return 'kernel'

    def expand(self, form):
        '''expand an existing form with fields from this component'''
        prefix = formactor_action_prefix
        
        p = form.paragraph()
        p.text = ['<h1>Thermodynamic Ensemble</h1>',
                  '<h2>Thermodynamic Ensemble</h2>',
'''
<script src="/vnfBK/javascripts/SpryAssets/SpryAccordion.js"
 type="text/javascript"></script>

<script type="text/javascript">
<!--
var Accordion1 = new Spry.Widget.Accordion("themoEnsemble");
//-->
</script>

 <br />
  <br />
  </label>
  <div id="themoEnsemble" class="Accordion"
 tabindex="0">
  <div class="AccordionPanel">
  <div class="AccordionPanelTab"> <label> <input
 name="radio" id="nve" value="nve" type="radio" />Constant
Number, Volume, Energy Ensemble (NVE)</label>
  </div>
  <div class="AccordionPanelContent">
  <div class="AccordionPanelContent"> <label>Energy
(K) <input name="temp2" id="temp2" value="0"
 type="text" /> </label>
  <p>&nbsp;</p>
  </div>
  </div>
  </div>
  <div class="AccordionPanel">
  <div class="AccordionPanelTab"> <label> <input
 name="radio" id="nve2" value="nve" type="radio" />
Constant Number, Volume, Temperature Ensemble (NVT)</label> </div>
  <div class="AccordionPanelContent"> <label>Temperature
(K) <input name="temp" id="temp" value="0"
 type="text" /> </label>
  <p> <label>Thermostat Parameter <input name="temp4"
 id="temp4" value="0.05" type="text" /> </label>
  </p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  </div>
  </div>
  <div class="AccordionPanel">
  <div class="AccordionPanelTab"> <label> <input
 name="radio" id="radio" value="radio" type="radio" />
Constant Number, Pressure, Temperature</label> </div>
  <div class="AccordionPanelContent"> <label>Pressure
(atm) <input name="temp3" id="temp3" value="0"
 type="text" /> </label>
  <p> <label>Barostat Parameter <input name="temp7"
 id="temp7" value="0.05" type="text" /> </label>
  </p>
  <p> <label>Temperature (K) <input name="temp5"
 id="temp5" value="0" type="text" /> </label>
  </p>
  <p> <label>Thermostat Parameter <input name="temp6"
 id="temp6" value="0.005" type="text" /> </label>
  </p>
  </div>
  </div>
  </div>
  <p> <label>Time Step (fs) <input name="timeStep"
 id="timeStep" value="1.0" type="text" /> </label>
  </p>
  <p> <label>Equilibrium Time (ps) <input
 name="equilibriumTime" id="equilibriumTime" value="0"
 type="text" /> </label>
  </p>
  <p> <label>Production Time (ps) <input
 name="equilibriumTime2" id="equilibriumTime2" value="1.0"
 type="text" /> </label>
  </p>
  <p> <label>Properties Calculation Frequency (fs) <input
 name="frequencyPropertyCalc" id="frequencyPropertyCalc"
 value="5.0" type="text" /> </label>
  </p>
  <p> <label>Trajectory Output Types
  <select name="trajectoryOutput" id="trajectoryOutput">
  <option>xyz and history</option>
  <option>xyz</option>
  <option>history</option>
  </select>
  </label></p>
  <p> <label>Save Progress Frequency (ps) <input
 name="restartFileOutputFrequency"
 id="restartFileOutputFrequency" value="0.25" type="text" />
  </label>
  ''']
        
        
        
        form.text(id= 'radio1', name = '%s.gulpHarmonic' % (prefix, ), label = 'Gulp Harmonic' )

        gulpHarmonic = form.radio( id= 'radio1', name = '%s.gulpHarmonic' % (prefix, ), label = 'Gulp Harmonic' )
        gulpNE = form.radio( id= 'radio2', name = '%s.gulpNE' % (prefix, ), label = "Gulp Newton's Equation" )
        mmtkNE = form.radio(id='radio3', name='%s.mmtkNE' % (prefix, ), label="Mmtk Newton's Equations")
    
        vaspPhon = form.radio(id='radio4', name='%s.vaspPhon' % (prefix, ), label='Vasp Energies, Phon Harmonic Motion')
        abinitPhon = form.radio(id='radio5', name='%s.abinitPhon' % (prefix, ), label="AbInit Energies, Phon Harmonic Motion")
        
        phononDispersions = form.radio(id='radio6', name='%s.phononDispersions' % (prefix, ), label="Phonon Dispersions")

        p = form.paragraph()
        p.text = ['<h2>Settings</h2>']

        return

    def processUserInputs(self):
        'process user inputs and save them to db'
        choices = self.parameters
        choosed = []
        for choice in choices: 
            value = getattr( self.inventory, choice )
            if value: choosed.append( choice )
            continue
        if len( choosed ) !=  1: raise RuntimeError, "only one itme should be choosed"
        return choosed[0]




formactor_action_prefix = 'actor.form-received' # assumed actor is a form actor


def form(): return Form( 'selectkernel' )


# version
__id__ = "$Id$"

# End of file 
