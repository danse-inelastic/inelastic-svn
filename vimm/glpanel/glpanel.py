#!/usr/bin/env python
# -*- coding: us-ascii -*-
# generated by wxGlade 

import wx
import wx.glcanvas

class AbstractBuildSlab(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractBuildSlab.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_8 = wx.StaticText(self, -1, "Cleavage Dir")
        self.cleavageChoice = wx.Choice(self, -1, choices=["C", "B", "A"])
        self.label_9 = wx.StaticText(self, -1, "Slab Depth")
        self.depthCtrl = wx.SpinCtrl(self, -1, "1", min=1, max=100)
        self.label_10 = wx.StaticText(self, -1, "Vacuum Amount")
        self.vacuumField = wx.TextCtrl(self, -1, "")
        self.buildButton = wx.Button(self, -1, "Build")
        self.cancelButton = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.doBuildSlabButton, self.buildButton)
        self.Bind(wx.EVT_BUTTON, self.doCancelBuildSlabButton, self.cancelButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractBuildSlab.__set_properties
        self.SetTitle("Build Slab")
        self.label_8.SetMinSize((115, 16))
        self.cleavageChoice.SetSelection(0)
        self.label_9.SetMinSize((114, 16))
        self.label_10.SetMinSize((115, 16))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractBuildSlab.__do_layout
        sizer_17 = wx.BoxSizer(wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_20 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_19 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_18 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_18.Add(self.label_8, 0, 0, 0)
        sizer_18.Add(self.cleavageChoice, 0, 0, 0)
        sizer_17.Add(sizer_18, 1, wx.EXPAND, 0)
        sizer_19.Add(self.label_9, 0, 0, 0)
        sizer_19.Add(self.depthCtrl, 0, 0, 0)
        sizer_17.Add(sizer_19, 1, wx.EXPAND, 0)
        sizer_20.Add(self.label_10, 0, 0, 0)
        sizer_20.Add(self.vacuumField, 0, 0, 0)
        sizer_17.Add(sizer_20, 1, wx.EXPAND, 0)
        sizer_21.Add(self.buildButton, 0, 0, 0)
        sizer_21.Add(self.cancelButton, 0, 0, 0)
        sizer_17.Add(sizer_21, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(sizer_17)
        sizer_17.Fit(self)
        self.Layout()
        # end wxGlade

    def doBuildSlabButton(self, event): # wxGlade: AbstractBuildSlab.<event_handler>
        print "Event handler `doBuildSlabButton' not implemented"
        event.Skip()

    def doCancelBuildSlabButton(self, event): # wxGlade: AbstractBuildSlab.<event_handler>
        print "Event handler `doCancelBuildSlabButton' not implemented"
        event.Skip()

# end of class AbstractBuildSlab


class AbstractAdjustBonds(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractAdjustBonds.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Scale")
        self.addBondsScaleFactor = wx.TextCtrl(self, -1, "")
        self.label_2 = wx.StaticText(self, -1, "Scope")
        self.addBondsToAllGeosCheckbox = wx.CheckBox(self, -1, "All Geos")
        self.addBondsButton = wx.Button(self, -1, "Add Bonds")
        self.addBondsCloseButton = wx.Button(self, -1, "Close")
        self.deleteBondsButton = wx.Button(self, -1, "Delete All")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.doAddBonds, self.addBondsButton)
        self.Bind(wx.EVT_BUTTON, self.doAddBondsClose, self.addBondsCloseButton)
        self.Bind(wx.EVT_BUTTON, self.doDeleteBonds, self.deleteBondsButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractAdjustBonds.__set_properties
        self.SetTitle("Adjust Bonds")
        self.addBondsButton.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractAdjustBonds.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(self.label_1, 0, 0, 0)
        sizer_3.Add(self.addBondsScaleFactor, 0, 0, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_4.Add(self.label_2, 0, 0, 0)
        sizer_4.Add(self.addBondsToAllGeosCheckbox, 0, 0, 0)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_5.Add(self.addBondsButton, 0, 0, 0)
        sizer_5.Add(self.addBondsCloseButton, 0, 0, 0)
        sizer_5.Add(self.deleteBondsButton, 0, 0, 0)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def doAddBonds(self, event): # wxGlade: AbstractAdjustBonds.<event_handler>
        print "Event handler `doAddBonds' not implemented!"
        event.Skip()

    def doAddBondsClose(self, event): # wxGlade: AbstractAdjustBonds.<event_handler>
        print "Event handler `doAddBondsClose' not implemented!"
        event.Skip()

    def doDeleteBonds(self, event): # wxGlade: AbstractAdjustBonds.<event_handler>
        print "Event handler `doDeleteBonds' not implemented!"
        event.Skip()

# end of class AbstractAdjustBonds


class AbstractBuildSupercell(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractBuildSupercell.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_7 = wx.StaticText(self, -1, "Dimensions")
        self.aField = wx.TextCtrl(self, -1, "")
        self.bField = wx.TextCtrl(self, -1, "")
        self.cField = wx.TextCtrl(self, -1, "")
        self.buildButton = wx.Button(self, -1, "Build")
        self.cancelButton = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.doBuildSupercellButton, self.buildButton)
        self.Bind(wx.EVT_BUTTON, self.doCancelSupercellButton, self.cancelButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractBuildSupercell.__set_properties
        self.SetTitle("Build Supercell")
        self.buildButton.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractBuildSupercell.__do_layout
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15.Add(self.label_7, 0, 0, 0)
        sizer_15.Add(self.aField, 0, 0, 0)
        sizer_15.Add(self.bField, 0, 0, 0)
        sizer_15.Add(self.cField, 0, 0, 0)
        sizer_14.Add(sizer_15, 1, wx.EXPAND, 0)
        sizer_16.Add(self.buildButton, 0, 0, 0)
        sizer_16.Add(self.cancelButton, 0, 0, 0)
        sizer_14.Add(sizer_16, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(sizer_14)
        sizer_14.Fit(self)
        self.Layout()
        # end wxGlade

    def doBuildSupercellButton(self, event): # wxGlade: AbstractBuildSupercell.<event_handler>
        print "Event handler `doBuildSupercellButton' not implemented"
        event.Skip()

    def doCancelSupercellButton(self, event): # wxGlade: AbstractBuildSupercell.<event_handler>
        print "Event handler `doCancelSupercellButton' not implemented"
        event.Skip()

# end of class AbstractBuildSupercell


class AbstractCrystalBuilder(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractCrystalBuilder.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_5 = wx.StaticText(self, -1, "Lattice")
        self.latticeChoice = wx.Choice(self, -1, choices=["SC", "FCC", "BCC", "HCP", "Diamond", "bTin", "Graphite", "Hexagonal", "NaCl", "CsCl", "Cubic ZnS", "Hexag ZnS"])
        self.label_4 = wx.StaticText(self, -1, "Atom Types")
        self.atom1Type = wx.TextCtrl(self, -1, "")
        self.atom2Type = wx.TextCtrl(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, "A, C/A")
        self.aEntry = wx.TextCtrl(self, -1, "")
        self.caEntry = wx.TextCtrl(self, -1, "")
        self.buildButton = wx.Button(self, -1, "Build")
        self.cancelButton = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.doBuildCrystalButton, self.buildButton)
        self.Bind(wx.EVT_BUTTON, self.doCancelCrystalBuild, self.cancelButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractCrystalBuilder.__set_properties
        self.SetTitle("Crystal Builder")
        self.label_5.SetMinSize((80, 16))
        self.latticeChoice.SetSelection(0)
        self.label_4.SetMinSize((80, 16))
        self.label_3.SetMinSize((80, 16))
        self.buildButton.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractCrystalBuilder.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7.Add(self.label_5, 0, 0, 0)
        sizer_7.Add(self.latticeChoice, 0, 0, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_8.Add(self.label_4, 0, 0, 0)
        sizer_8.Add(self.atom1Type, 0, 0, 0)
        sizer_8.Add(self.atom2Type, 0, 0, 0)
        sizer_6.Add(sizer_8, 1, wx.EXPAND, 0)
        sizer_9.Add(self.label_3, 0, 0, 0)
        sizer_9.Add(self.aEntry, 0, 0, 0)
        sizer_9.Add(self.caEntry, 0, 0, 0)
        sizer_6.Add(sizer_9, 1, wx.EXPAND, 0)
        sizer_10.Add(self.buildButton, 0, 0, 0)
        sizer_10.Add(self.cancelButton, 0, 0, 0)
        sizer_6.Add(sizer_10, 1, wx.ALIGN_RIGHT, 0)
        self.SetSizer(sizer_6)
        sizer_6.Fit(self)
        self.Layout()
        # end wxGlade

    def Dd(self, event): # wxGlade: AbstractCrystalBuilder.<event_handler>
        print "Event handler `Dd' not implemented!"
        event.Skip()

    def doCancelCrystalBuild(self, event): # wxGlade: AbstractCrystalBuilder.<event_handler>
        print "Event handler `doCancelCrystalBuild' not implemented!"
        event.Skip()

    def doBuildCrystalButton(self, event): # wxGlade: AbstractCrystalBuilder.<event_handler>
        print "Event handler `doBuildCrystalButton' not implemented"
        event.Skip()

# end of class AbstractCrystalBuilder


class AbstractCrystalDatabaseDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractCrystalDatabaseDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_6 = wx.StaticText(self, -1, "Species")
        self.speciesChoice = wx.Choice(self, -1, choices=["He", "Li", "Be", "Diamond", "Graphite", "Ne", "Na", "Mg"])
        self.buildButton = wx.Button(self, -1, "Build")
        self.cancelButton = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.doBuildCrystalButton, self.buildButton)
        self.Bind(wx.EVT_BUTTON, self.doCancelBuildCrystalButton, self.cancelButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractCrystalDatabaseDialog.__set_properties
        self.SetTitle("dialog_3")
        self.speciesChoice.SetSelection(0)
        self.buildButton.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractCrystalDatabaseDialog.__do_layout
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12.Add(self.label_6, 0, 0, 0)
        sizer_12.Add(self.speciesChoice, 0, 0, 0)
        sizer_11.Add(sizer_12, 1, wx.EXPAND, 0)
        sizer_13.Add(self.buildButton, 0, 0, 0)
        sizer_13.Add(self.cancelButton, 0, 0, 0)
        sizer_11.Add(sizer_13, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_11)
        sizer_11.Fit(self)
        self.Layout()
        # end wxGlade

    def doBuildCrystalButton(self, event): # wxGlade: AbstractCrystalDatabaseDialog.<event_handler>
        print "Event handler `doBuildCrystalButton' not implemented"
        event.Skip()

    def doCancelBuildCrystalButton(self, event): # wxGlade: AbstractCrystalDatabaseDialog.<event_handler>
        print "Event handler `doCancelBuildCrystalButton' not implemented"
        event.Skip()

# end of class AbstractCrystalDatabaseDialog


class AbsAdjustBonds(wx.Dialog):
    def __init__(self, *args, **kwds):
        # content of this block not found: did you rename this class?
        pass

    def __set_properties(self):
        # content of this block not found: did you rename this class?
        pass

    def __do_layout(self):
        # content of this block not found: did you rename this class?
        pass

    def doAddBonds(self, event): # wxGlade: AbsAdjustBonds.<event_handler>
        print "Event handler `doAddBonds' not implemented"
        event.Skip()

    def doAddBondsClose(self, event): # wxGlade: AbsAdjustBonds.<event_handler>
        print "Event handler `doAddBondsClose' not implemented"
        event.Skip()

    def doDeleteBonds(self, event): # wxGlade: AbsAdjustBonds.<event_handler>
        print "Event handler `doDeleteBonds' not implemented"
        event.Skip()

# end of class AbsAdjustBonds


class AbsGLPanel(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbsGLPanel.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.glpanel_menubar = wx.MenuBar()
        self.SetMenuBar(self.glpanel_menubar)
        self.fileMenu = wx.Menu()
        self.fileMenu.Append(wx.NewId(), "Open", "Open a file", wx.ITEM_NORMAL)
        self.fileMenu.Append(wx.NewId(), "Save", "Save the current file", wx.ITEM_NORMAL)
        self.fileMenu.Append(wx.NewId(), "Quit", "Quit vimm", wx.ITEM_NORMAL)
        self.glpanel_menubar.Append(self.fileMenu, "File")
        self.editMenu = wx.Menu()
        self.editMenu.Append(wx.NewId(), "Edit Coordinates", "", wx.ITEM_NORMAL)
        self.editMenu.Append(wx.NewId(), "Screenshot", "Save the current screenshot to a file", wx.ITEM_NORMAL)
        self.editMenu.Append(wx.NewId(), "Set Background Color", "Change the background color", wx.ITEM_NORMAL)
        self.glpanel_menubar.Append(self.editMenu, "Edit")
        self.viewMenu = wx.Menu()
        self.viewMenu.Append(wx.NewId(), "Lines", "", wx.ITEM_CHECK)
        self.viewMenu.Append(wx.NewId(), "Balls", "", wx.ITEM_CHECK)
        self.viewMenu.Append(wx.NewId(), "Ball and Stick", "", wx.ITEM_CHECK)
        self.viewMenu.Append(wx.NewId(), "Cylinders", "", wx.ITEM_CHECK)
        self.viewMenu.AppendSeparator()
        self.viewMenu.Append(wx.NewId(), "Unit Cell", "", wx.ITEM_CHECK)
        self.viewMenu.Append(wx.NewId(), "Cell Labels", "", wx.ITEM_CHECK)
        self.viewMenu.Append(wx.NewId(), "Atom Labels", "", wx.ITEM_CHECK)
        self.viewMenu.Append(wx.NewId(), "Hide Hydrogens", "", wx.ITEM_CHECK)
        self.glpanel_menubar.Append(self.viewMenu, "View")
        self.toolsMenu = wx.Menu()
        self.toolsMenu.Append(wx.NewId(), "Add Unit Cell", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Adjust Bonds", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Animate", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Build Alkane", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Build Nanotube", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Build Slab", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Build Supercell", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Crystal Builder", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Crystal Database", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Measure Distances", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "Sketcher", "", wx.ITEM_NORMAL)
        self.toolsMenu.Append(wx.NewId(), "View Orbitals", "", wx.ITEM_NORMAL)
        self.glpanel_menubar.Append(self.toolsMenu, "Tools")
        self.appMenu = wx.Menu()
        self.appMenu.Append(wx.NewId(), "Jaguar", "", wx.ITEM_NORMAL)
        self.appMenu.Append(wx.NewId(), "Quest", "", wx.ITEM_NORMAL)
        self.glpanel_menubar.Append(self.appMenu, "Applications")
        self.helpMenu = wx.Menu()
        self.helpMenu.Append(wx.NewId(), "About vimm", "", wx.ITEM_NORMAL)
        self.helpMenu.Append(wx.NewId(), "vimm Help", "vimm Help", wx.ITEM_NORMAL)
        self.helpMenu.Append(wx.NewId(), "vimm License", "", wx.ITEM_NORMAL)
        self.glpanel_menubar.Append(self.helpMenu, "&Help")
        # Menu Bar end
        
        # Tool Bar
        self.toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_TEXT)
        self.SetToolBar(self.toolbar)
        self.toolbar.AddLabelTool(wx.NewId(), "|<", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.toolbar.AddLabelTool(wx.NewId(), "<", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.toolbar.AddLabelTool(wx.NewId(), ">", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.toolbar.AddLabelTool(wx.NewId(), ">>", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.toolbar.AddLabelTool(wx.NewId(), ">|", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        # Tool Bar end
        self.canvas = wx.glcanvas.GLCanvas(self, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.doOpenMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doSaveMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doQuitMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doEditCoordinates, id=-1)
        self.Bind(wx.EVT_MENU, self.doScreenshotMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doSetBackgroundMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewLinesMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewBallsMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewBallStickMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewCylindersMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewUnitCell, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewCellLabels, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewAtomLabels, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewHideHydrogens, id=-1)
        self.Bind(wx.EVT_MENU, self.doAddUnitCell, id=-1)
        self.Bind(wx.EVT_MENU, self.doAdjustBonds, id=-1)
        self.Bind(wx.EVT_MENU, self.doAnimate, id=-1)
        self.Bind(wx.EVT_MENU, self.doBuildAlkane, id=-1)
        self.Bind(wx.EVT_MENU, self.doBuildNanotube, id=-1)
        self.Bind(wx.EVT_MENU, self.doBuildSlab, id=-1)
        self.Bind(wx.EVT_MENU, self.doBuildSupercell, id=-1)
        self.Bind(wx.EVT_MENU, self.doCrystalBuilder, id=-1)
        self.Bind(wx.EVT_MENU, self.doCrystalDB, id=-1)
        self.Bind(wx.EVT_MENU, self.doMeasureDistances, id=-1)
        self.Bind(wx.EVT_MENU, self.doSketcher, id=-1)
        self.Bind(wx.EVT_MENU, self.doViewOrbitals, id=-1)
        self.Bind(wx.EVT_MENU, self.doJaguarMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doQuestMenu, id=-1)
        self.Bind(wx.EVT_MENU, self.doAboutvimm, id=-1)
        self.Bind(wx.EVT_MENU, self.dovimmHelp, id=-1)
        self.Bind(wx.EVT_MENU, self.dovimmLicense, id=-1)
        self.Bind(wx.EVT_TOOL, self.doRewindButton, id=-1)
        self.Bind(wx.EVT_TOOL, self.doPreviousButton, id=-1)
        self.Bind(wx.EVT_TOOL, self.doNextButton, id=-1)
        self.Bind(wx.EVT_TOOL, self.doPlayButton, id=-1)
        self.Bind(wx.EVT_TOOL, self.doAdvanceEndButton, id=-1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbsGLPanel.__set_properties
        self.SetTitle("glpanel")
        self.SetSize((400, 538))
        self.toolbar.SetToolSeparation(9)
        self.toolbar.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbsGLPanel.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.canvas, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def doOpenMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doOpenMenu' not implemented"
        event.Skip()

    def doSaveMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doSaveMenu' not implemented"
        event.Skip()

    def doQuitMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doQuitMenu' not implemented"
        event.Skip()

    def doScreenshotMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doScreenshotMenu' not implemented"
        event.Skip()

    def doSetBackgroundMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doSetBackgroundMenu' not implemented"
        event.Skip()

    def doViewLinesMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewLinesMenu' not implemented"
        event.Skip()

    def doViewBallsMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewBallsMenu' not implemented"
        event.Skip()

    def doViewBallStickMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewBallStickMenu' not implemented"
        event.Skip()

    def doViewCylindersMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewCylindersMenu' not implemented"
        event.Skip()

    def doViewUnitCell(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewUnitCell' not implemented"
        event.Skip()

    def doViewCellLabels(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewCellLabels' not implemented"
        event.Skip()

    def doViewAtomLabels(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewAtomLabels' not implemented"
        event.Skip()

    def doViewHideHydrogens(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewHideHydrogens' not implemented"
        event.Skip()

    def doRewindButton(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doRewindButton' not implemented"
        event.Skip()

    def doPreviousButton(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doPreviousButton' not implemented"
        event.Skip()

    def doNextButton(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doNextButton' not implemented"
        event.Skip()

    def doPlayButton(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doPlayButton' not implemented"
        event.Skip()

    def doAdvanceEndButton(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doAdvanceEndButton' not implemented"
        event.Skip()

    def doEditCoordinates(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doEditCoordinates' not implemented"
        event.Skip()

    def doAddUnitCell(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doAddUnitCell' not implemented"
        event.Skip()

    def doAdjustBonds(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doAdjustBonds' not implemented"
        event.Skip()

    def doAnimate(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doAnimate' not implemented"
        event.Skip()

    def doBuildAlkane(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doBuildAlkane' not implemented"
        event.Skip()

    def doBuildNanotube(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doBuildNanotube' not implemented"
        event.Skip()

    def doBuildSlab(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doBuildSlab' not implemented"
        event.Skip()

    def doBuildSupercell(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doBuildSupercell' not implemented"
        event.Skip()

    def doCrystalBuilder(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doCrystalBuilder' not implemented"
        event.Skip()

    def doCrystalDB(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doCrystalDB' not implemented"
        event.Skip()

    def doMeasureDistances(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doMeasureDistances' not implemented"
        event.Skip()

    def doSketcher(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doSketcher' not implemented"
        event.Skip()

    def doViewOrbitals(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doViewOrbitals' not implemented"
        event.Skip()

    def doJaguarMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doJaguarMenu' not implemented"
        event.Skip()

    def doQuestMenu(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doQuestMenu' not implemented"
        event.Skip()

    def doAboutvimm(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `doAboutvimm' not implemented"
        event.Skip()

    def dovimmHelp(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `dovimmHelp' not implemented"
        event.Skip()

    def dovimmLicense(self, event): # wxGlade: AbsGLPanel.<event_handler>
        print "Event handler `dovimmLicense' not implemented"
        event.Skip()

# end of class AbsGLPanel


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    glpanel = AbsGLPanel(None, -1, "")
    app.SetTopWindow(glpanel)
    glpanel.Show()
    app.MainLoop()
