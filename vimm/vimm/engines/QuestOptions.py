# Vimm: Visual Interface to Materials Manipulation
#
# Copyright 2010 Caltech.  Copyright 2005 Sandia Corporation.  Under the terms of Contract
# DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government
# retains certain rights in this sofware.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
# USA


#!/usr/bin/env python
# generated by wxGlade 0.3.2 on Thu Sep 23 14:27:23 2004

import wx

class QuestOptions(wx.Frame):
    def __init__(self, parent, id, material, **kwds):
        self.parent = parent
        self.material = material
        kwds["title"] = "Seqquest Options"
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, parent, id, **kwds)
        
        self.qout_nb = wx.Notebook(self, -1, style=0)
        self.qopt_nb_md = wx.Panel(self.qout_nb, -1)
        self.qopt_nb_cell = wx.Panel(self.qout_nb, -1)
        self.qopt_nb_geo = wx.Panel(self.qout_nb, -1)
        self.qopt_nb_run = wx.Panel(self.qout_nb, -1)
        self.qopt_nb_sym = wx.Panel(self.qout_nb, -1)
        self.qopt_nb_func = wx.Panel(self.qout_nb, -1)
        self.pnMain = wx.Panel(self.qout_nb, -1)

        self.lblOutputLevel = wx.StaticText(self.pnMain, -1, "Output Level")
        sizeMain = self.lblOutputLevel.GetSize()
        self.cboOutputLevel = wx.ComboBox(self.pnMain, -1, choices=["", "0", "1", "2", "3", "4", "5"], style=wx.CB_DROPDOWN)
        self.lblTitle = wx.StaticText(self.pnMain, -1, "Title", size=sizeMain, style=wx.ALIGN_RIGHT)
        self.txtTitle = wx.TextCtrl(self.pnMain, -1, "")
        self.lblJobType = wx.StaticText(self.pnMain, -1, "Job Type", size=sizeMain, style=wx.ALIGN_RIGHT)
        self.chkSCF = wx.CheckBox(self.pnMain, -1, "SCF")
        self.chkRelax = wx.CheckBox(self.pnMain, -1, "Relax")
        self.chkCell = wx.CheckBox(self.pnMain, -1, "Cell")
        self.chkNEB = wx.CheckBox(self.pnMain, -1, "NEB")
        self.chkMD = wx.CheckBox(self.pnMain, -1, "MD")
        self.chkPost = wx.CheckBox(self.pnMain, -1, "Post")
        self.lblDimensions = wx.StaticText(self.pnMain, -1, "Dimensions", size=sizeMain, style=wx.ALIGN_RIGHT)
        self.cboDimensions = wx.ComboBox(self.pnMain, -1, choices=["", "3", "2", "1"], style=wx.CB_DROPDOWN)
        self.lblRealGrid = wx.StaticText(self.pnMain, -1, "Real Grid", size=sizeMain, style=wx.ALIGN_RIGHT)
        self.txtRealGridX = wx.TextCtrl(self.pnMain, -1, "")
        self.txtRealGridY = wx.TextCtrl(self.pnMain, -1, "")
        self.txtRealGridZ = wx.TextCtrl(self.pnMain, -1, "")
        self.btnGridGuess = wx.Button(self.pnMain, -1, "Guess")
        self.lblKGrid = wx.StaticText(self.pnMain, -1, "K Grid", size=sizeMain, style=wx.ALIGN_RIGHT)
        self.txtKGridX = wx.TextCtrl(self.pnMain, -1, "")
        self.txtKGridY = wx.TextCtrl(self.pnMain, -1, "")
        self.txtKGridZ = wx.TextCtrl(self.pnMain, -1, "")
        self.chkKGridHex = wx.CheckBox(self.pnMain, -1, "Hex")
        self.func_label = wx.StaticText(self.qopt_nb_func, -1, "Density Functional")
        self.func_combo = wx.ComboBox(self.qopt_nb_func, -1, choices=["", "LDA", "PBE", "PW91"], style=wx.CB_DROPDOWN)
        self.spinpol_label = wx.StaticText(self.qopt_nb_func, -1, "Spin Polarization")
        self.spinpol_entry = wx.TextCtrl(self.qopt_nb_func, -1, "")
        self.symopt_label = wx.StaticText(self.qopt_nb_sym, -1, "Symmetry Options")
        self.symopt_entry = wx.TextCtrl(self.qopt_nb_sym, -1, "")
        self.symapply_label = wx.StaticText(self.qopt_nb_sym, -1, "Apply New Symmetry")
        self.symapply_combo = wx.ComboBox(self.qopt_nb_sym, -1, choices=["", "Cubic", "Td", "Wurzite", "HCP/Atom", "HCP/Interstitial", "BC8", "Sapphire", "K/Al2O3", "Quartz"], style=wx.CB_DROPDOWN)
        self.symapply_button = wx.Button(self.qopt_nb_sym, -1, "Apply")
        self.maxscf_label = wx.StaticText(self.qopt_nb_run, -1, "Max SCF Iterations")
        self.maxscf_entry = wx.TextCtrl(self.qopt_nb_run, -1, "")
        self.temp_label = wx.StaticText(self.qopt_nb_run, -1, "Temperature")
        self.temp_entry = wx.TextCtrl(self.qopt_nb_run, -1, "")
        self.scfblend_label = wx.StaticText(self.qopt_nb_run, -1, "SCF Blend")
        self.scfblend_entry = wx.TextCtrl(self.qopt_nb_run, -1, "")
        self.convcrit_label = wx.StaticText(self.qopt_nb_run, -1, "Convergence Criteria")
        self.convcrit_entry = wx.TextCtrl(self.qopt_nb_run, -1, "")
        self.forcecut_label = wx.StaticText(self.qopt_nb_run, -1, "Force Cutoff")
        self.forcecut_entry = wx.TextCtrl(self.qopt_nb_run, -1, "")
        self.intcut_label = wx.StaticText(self.qopt_nb_run, -1, "Integral Cutoff")
        self.intcut_entry = wx.TextCtrl(self.qopt_nb_run, -1, "")
        self.relax_label = wx.StaticText(self.qopt_nb_geo, -1, "Relaxation Method")
        self.relax_combo = wx.ComboBox(self.qopt_nb_geo, -1, choices=["", "Broyden", "Broyden/DDJ", "ASD", "Steepest", "Damped Dynamics", "Damped by Atom"], style=wx.CB_DROPDOWN)
        self.constraint_label = wx.StaticText(self.qopt_nb_geo, -1, "Constraints")
        self.constraint_combo = wx.ComboBox(self.qopt_nb_geo, -1, choices=["Relax All", "Relax First N", "Relax Last N"], style=wx.CB_DROPDOWN)
        self.constraint_entry = wx.TextCtrl(self.qopt_nb_geo, -1, "")
        self.fconvcrit_label = wx.StaticText(self.qopt_nb_geo, -1, "Force Convergence Criterion")
        self.fconvcrit_entry = wx.TextCtrl(self.qopt_nb_geo, -1, "")
        self.fblend_label = wx.StaticText(self.qopt_nb_geo, -1, "Force Blending")
        self.fblend_entry = wx.TextCtrl(self.qopt_nb_geo, -1, "")
        self.gstepmax_label = wx.StaticText(self.qopt_nb_geo, -1, "Maximum Minimization Steps")
        self.gstepmax_entry = wx.TextCtrl(self.qopt_nb_geo, -1, "")
        self.gmintstep_label = wx.StaticText(self.qopt_nb_geo, -1, "Minimization Time Step")
        self.gmintstep_entry = wx.TextCtrl(self.qopt_nb_geo, -1, "")
        self.stressmeth_label = wx.StaticText(self.qopt_nb_cell, -1, "Stress Method")
        self.stressmeth_combo = wx.ComboBox(self.qopt_nb_cell, -1, choices=["", "Broyden", "Steepest"], style=wx.CB_DROPDOWN)
        self.presstype_label = wx.StaticText(self.qopt_nb_cell, -1, "Pressure Type")
        self.presstype_combo = wx.ComboBox(self.qopt_nb_cell, -1, choices=["", "Hydrostatic", "X Axial ", "Y Axial", "Z Axial"], style=wx.CB_DROPDOWN)
        self.presstype_entry = wx.TextCtrl(self.qopt_nb_cell, -1, "")
        self.cminsteps_label = wx.StaticText(self.qopt_nb_cell, -1, "Minimization Steps")
        self.cellminsteps_entry = wx.TextCtrl(self.qopt_nb_cell, -1, "")
        self.cellconvcrit_label = wx.StaticText(self.qopt_nb_cell, -1, "Convergence Criterion")
        self.cellconvcrit_entry = wx.TextCtrl(self.qopt_nb_cell, -1, "")
        self.bulkmod_label = wx.StaticText(self.qopt_nb_cell, -1, "Bulk Modulus Guess")
        self.bulkmod_entry = wx.TextCtrl(self.qopt_nb_cell, -1, "")
        self.mdmeth_label = wx.StaticText(self.qopt_nb_md, -1, "Method")
        self.mdmeth_entry = wx.TextCtrl(self.qopt_nb_md, -1, "")
        self.mdtemp_label = wx.StaticText(self.qopt_nb_md, -1, "Temperature")
        self.mdtemp_entry = wx.TextCtrl(self.qopt_nb_md, -1, "")
        self.mdtstep_label = wx.StaticText(self.qopt_nb_md, -1, "Timestep")
        self.mdtstep_entry = wx.TextCtrl(self.qopt_nb_md, -1, "")
        self.mdeqsteps_label = wx.StaticText(self.qopt_nb_md, -1, "Equilibration Steps")
        self.mdeqsteps_entry = wx.TextCtrl(self.qopt_nb_md, -1, "")
        self.mdsteps_label = wx.StaticText(self.qopt_nb_md, -1, "MD Steps")
        self.mdsteps_entry = wx.TextCtrl(self.qopt_nb_md, -1, "")
        self.save_button = wx.Button(self, -1, "Save")
        self.cancel_button = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()
        return

    def __set_properties(self):
        self.cboOutputLevel.SetSelection(0)
        self.cboDimensions.SetSelection(0)
        self.func_combo.SetSelection(0)
        self.symapply_combo.SetSelection(0)
        self.relax_combo.SetSelection(0)
        self.constraint_combo.SetSelection(0)
        self.stressmeth_combo.SetSelection(0)
        self.presstype_combo.SetSelection(0)
        self.save_button.SetDefault()
        return

    def __do_layout(self):
        sizer = wx.FlexGridSizer(2, 1, 0, 0)
        button_sizer = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_6 = wx.FlexGridSizer(5, 2, 0, 0)
        cell_sizer = wx.FlexGridSizer(5, 2, 0, 0)
        presstype_sizer = wx.BoxSizer(wx.HORIZONTAL)
        geo_sizer = wx.FlexGridSizer(6, 2, 0, 0)
        constraint_sizer = wx.BoxSizer(wx.HORIZONTAL)
        run_sizer = wx.FlexGridSizer(6, 2, 0, 0)
        sym_sizer = wx.FlexGridSizer(2, 2, 0, 0)
        symapply_sizer = wx.BoxSizer(wx.HORIZONTAL)
        func_sizer = wx.FlexGridSizer(2, 2, 0, 0)
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 0, 0)
        kgrid_sizer = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer = wx.BoxSizer(wx.HORIZONTAL)
        jobtype_sizer = wx.BoxSizer(wx.HORIZONTAL)
        #
        # Main Tab
        #
        szrMain = wx.BoxSizer(wx.VERTICAL)
        szrTitle = wx.BoxSizer(wx.HORIZONTAL)
        szrJobType = wx.BoxSizer(wx.HORIZONTAL)
        szrOutputLevel = wx.BoxSizer(wx.HORIZONTAL)
        szrDimensions = wx.BoxSizer(wx.HORIZONTAL)
        szrRealGrid = wx.BoxSizer(wx.HORIZONTAL)
        szrKGrid = wx.BoxSizer(wx.HORIZONTAL)

        szrTitle.Add(self.lblTitle, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrTitle.Add(self.txtTitle, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)

        szrJobType.Add(self.lblJobType, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrJobType.Add(self.chkSCF, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrJobType.Add(self.chkRelax, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrJobType.Add(self.chkCell, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrJobType.Add(self.chkNEB, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrJobType.Add(self.chkMD, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrJobType.Add(self.chkPost, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        
        szrOutputLevel.Add(self.lblOutputLevel, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrOutputLevel.Add(self.cboOutputLevel, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        
        szrDimensions.Add(self.lblDimensions, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrDimensions.Add(self.cboDimensions, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        
        szrRealGrid.Add(self.lblRealGrid, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrRealGrid.Add(self.txtRealGridX, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrRealGrid.Add(self.txtRealGridY, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrRealGrid.Add(self.txtRealGridZ, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrRealGrid.Add(self.btnGridGuess, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        
        szrKGrid.Add(self.lblKGrid, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrKGrid.Add(self.txtKGridX, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrKGrid.Add(self.txtKGridY, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrKGrid.Add(self.txtKGridZ, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrKGrid.Add(self.chkKGridHex, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)

        szrMain.Add(szrTitle, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrMain.Add(szrJobType, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrMain.Add(szrOutputLevel, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrMain.Add(szrDimensions, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrMain.Add(szrRealGrid, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        szrMain.Add(szrKGrid, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
        
        self.pnMain.SetAutoLayout(1)
        self.pnMain.SetSizer(szrMain)
        szrMain.Fit(self.pnMain)
        szrMain.SetSizeHints(self.pnMain)

        func_sizer.Add(self.func_label, 0, 0, 0)
        func_sizer.Add(self.func_combo, 0, 0, 0)
        func_sizer.Add(self.spinpol_label, 0, 0, 0)
        func_sizer.Add(self.spinpol_entry, 0, 0, 0)
        self.qopt_nb_func.SetAutoLayout(1)
        self.qopt_nb_func.SetSizer(func_sizer)
        func_sizer.Fit(self.qopt_nb_func)
        func_sizer.SetSizeHints(self.qopt_nb_func)
        sym_sizer.Add(self.symopt_label, 0, 0, 0)
        sym_sizer.Add(self.symopt_entry, 0, 0, 0)
        sym_sizer.Add(self.symapply_label, 0, 0, 0)
        symapply_sizer.Add(self.symapply_combo, 0, 0, 0)
        symapply_sizer.Add(self.symapply_button, 0, 0, 0)
        sym_sizer.Add(symapply_sizer, 1, wx.EXPAND, 0)
        self.qopt_nb_sym.SetAutoLayout(1)
        self.qopt_nb_sym.SetSizer(sym_sizer)
        sym_sizer.Fit(self.qopt_nb_sym)
        sym_sizer.SetSizeHints(self.qopt_nb_sym)
        run_sizer.Add(self.maxscf_label, 0, 0, 0)
        run_sizer.Add(self.maxscf_entry, 0, 0, 0)
        run_sizer.Add(self.temp_label, 0, 0, 0)
        run_sizer.Add(self.temp_entry, 0, 0, 0)
        run_sizer.Add(self.scfblend_label, 0, 0, 0)
        run_sizer.Add(self.scfblend_entry, 0, 0, 0)
        run_sizer.Add(self.convcrit_label, 0, 0, 0)
        run_sizer.Add(self.convcrit_entry, 0, 0, 0)
        run_sizer.Add(self.forcecut_label, 0, 0, 0)
        run_sizer.Add(self.forcecut_entry, 0, 0, 0)
        run_sizer.Add(self.intcut_label, 0, 0, 0)
        run_sizer.Add(self.intcut_entry, 0, 0, 0)
        self.qopt_nb_run.SetAutoLayout(1)
        self.qopt_nb_run.SetSizer(run_sizer)
        run_sizer.Fit(self.qopt_nb_run)
        run_sizer.SetSizeHints(self.qopt_nb_run)
        geo_sizer.Add(self.relax_label, 0, 0, 0)
        geo_sizer.Add(self.relax_combo, 0, 0, 0)
        geo_sizer.Add(self.constraint_label, 0, 0, 0)
        constraint_sizer.Add(self.constraint_combo, 0, 0, 0)
        constraint_sizer.Add(self.constraint_entry, 0, 0, 0)
        geo_sizer.Add(constraint_sizer, 1, wx.EXPAND, 0)
        geo_sizer.Add(self.fconvcrit_label, 0, 0, 0)
        geo_sizer.Add(self.fconvcrit_entry, 0, 0, 0)
        geo_sizer.Add(self.fblend_label, 0, 0, 0)
        geo_sizer.Add(self.fblend_entry, 0, 0, 0)
        geo_sizer.Add(self.gstepmax_label, 0, 0, 0)
        geo_sizer.Add(self.gstepmax_entry, 0, 0, 0)
        geo_sizer.Add(self.gmintstep_label, 0, 0, 0)
        geo_sizer.Add(self.gmintstep_entry, 0, 0, 0)
        self.qopt_nb_geo.SetAutoLayout(1)
        self.qopt_nb_geo.SetSizer(geo_sizer)
        geo_sizer.Fit(self.qopt_nb_geo)
        geo_sizer.SetSizeHints(self.qopt_nb_geo)
        cell_sizer.Add(self.stressmeth_label, 0, 0, 0)
        cell_sizer.Add(self.stressmeth_combo, 0, 0, 0)
        cell_sizer.Add(self.presstype_label, 0, 0, 0)
        presstype_sizer.Add(self.presstype_combo, 0, 0, 0)
        presstype_sizer.Add(self.presstype_entry, 0, 0, 0)
        cell_sizer.Add(presstype_sizer, 1, wx.EXPAND, 0)
        cell_sizer.Add(self.cminsteps_label, 0, 0, 0)
        cell_sizer.Add(self.cellminsteps_entry, 0, 0, 0)
        cell_sizer.Add(self.cellconvcrit_label, 0, 0, 0)
        cell_sizer.Add(self.cellconvcrit_entry, 0, 0, 0)
        cell_sizer.Add(self.bulkmod_label, 0, 0, 0)
        cell_sizer.Add(self.bulkmod_entry, 0, 0, 0)
        self.qopt_nb_cell.SetAutoLayout(1)
        self.qopt_nb_cell.SetSizer(cell_sizer)
        cell_sizer.Fit(self.qopt_nb_cell)
        cell_sizer.SetSizeHints(self.qopt_nb_cell)
        grid_sizer_6.Add(self.mdmeth_label, 0, 0, 0)
        grid_sizer_6.Add(self.mdmeth_entry, 0, 0, 0)
        grid_sizer_6.Add(self.mdtemp_label, 0, 0, 0)
        grid_sizer_6.Add(self.mdtemp_entry, 0, 0, 0)
        grid_sizer_6.Add(self.mdtstep_label, 0, 0, 0)
        grid_sizer_6.Add(self.mdtstep_entry, 0, 0, 0)
        grid_sizer_6.Add(self.mdeqsteps_label, 0, 0, 0)
        grid_sizer_6.Add(self.mdeqsteps_entry, 0, 0, 0)
        grid_sizer_6.Add(self.mdsteps_label, 0, 0, 0)
        grid_sizer_6.Add(self.mdsteps_entry, 0, 0, 0)
        self.qopt_nb_md.SetAutoLayout(1)
        self.qopt_nb_md.SetSizer(grid_sizer_6)
        grid_sizer_6.Fit(self.qopt_nb_md)
        grid_sizer_6.SetSizeHints(self.qopt_nb_md)
        self.qout_nb.AddPage(self.pnMain, "Main")
        self.qout_nb.AddPage(self.qopt_nb_func, "Functional")
        self.qout_nb.AddPage(self.qopt_nb_sym, "Symmetry")
        self.qout_nb.AddPage(self.qopt_nb_run, "Run Opts")
        self.qout_nb.AddPage(self.qopt_nb_geo, "Geo Opts")
        self.qout_nb.AddPage(self.qopt_nb_cell, "Cell Opts")
        self.qout_nb.AddPage(self.qopt_nb_md, "MD Opts")
        sizer.Add(wx.NotebookSizer(self.qout_nb), 1, wx.EXPAND, 0)
        button_sizer.Add(self.save_button, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 6)
        button_sizer.Add(self.cancel_button, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 6)
        sizer.Add(button_sizer, 1, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 3)
        self.SetAutoLayout(1)
        self.SetSizer(sizer)
        sizer.Fit(self)
        sizer.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class Frame


