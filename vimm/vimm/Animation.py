# Vimm: Visual Interface to Materials Manipulation
#
# Copyright 2010 Caltech.  Copyright 2005 Sandia Corporation.  Under the terms of Contract
# DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government
# retains certain rights in this sofware.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
# USA


#!/usr/bin/env python
# generated by wxGlade 0.3.2 on Thu May 06 14:27:08 2004

import wx
import os

class Animation(wx.Frame):
    def __init__(self, parent, id, **kwds):
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, parent, id, "Animation Options", **kwds)

        self.parent = parent
      
        self.create_menus()
        self.create_buttons()
        self.statusbar = self.CreateStatusBar(1, 0)

        self.__set_properties()
        self.__do_layout()
        self.update_statusbar()

    def __set_properties(self):
        self.SetTitle("Animation Options")
        self.btnPlay.SetSize((100, 50))
        self.btnPlay.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.btnPlay.SetDefault()
        self.btnEnd.SetSize((100, 50))
        self.btnEnd.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.btnReset.SetSize((100, 50))
        self.btnReset.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.btnPrevious.SetSize((100, 50))
        self.btnPrevious.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.btnNext.SetSize((100, 50))
        self.btnNext.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))

    def __do_layout(self):
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.btnPlay, 0, 0, 0)
        sizer_2.Add(self.btnReset, 0, 0, 0)
        sizer_2.Add(self.btnEnd, 0, 0, 0)
        sizer_2.Add(self.btnPrevious, 0, 0, 0)
        sizer_2.Add(self.btnNext, 0, 0, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        self.Centre()

    def create_menus(self):
        ID_GoToFrame = wx.NewId()
        ID_Dump = wx.NewId()
        
        self.frmAnimation_menubar = wx.MenuBar()
        self.SetMenuBar(self.frmAnimation_menubar)
        self.mnuFile = wx.Menu()
        self.mnuFile.Append(wx.ID_EXIT, "Exit", "Close window", wx.ITEM_NORMAL)
        self.frmAnimation_menubar.Append(self.mnuFile, "File")
        self.mnuOptions = wx.Menu()
        self.mnuOptions.Append(ID_GoToFrame, "Go To Frame", "Go to a specific frame", wx.ITEM_NORMAL)
        self.mnuOptions.Append(ID_Dump, "Dump Frames For Movie", "Dump a set a frames for a movie", wx.ITEM_NORMAL)
        self.frmAnimation_menubar.Append(self.mnuOptions, "Options")

        wx.EVT_MENU(self, wx.ID_EXIT, self.exit)
        wx.EVT_MENU(self, ID_GoToFrame, self.goto_frame)
        wx.EVT_MENU(self, ID_Dump, self.dump_movie)

    def create_buttons(self):
        self.btnPlay = wx.Button(self, -1, "Play")
        self.btnEnd = wx.Button(self, -1, "End")
        self.btnReset = wx.Button(self, -1, "Reset")
        self.btnPrevious = wx.Button(self, -1, "Previous")
        self.btnNext = wx.Button(self, -1, "Next")

        wx.EVT_BUTTON(self, self.btnPlay.GetId(), self.play)
        wx.EVT_BUTTON(self, self.btnReset.GetId(), self.reset)
        wx.EVT_BUTTON(self, self.btnEnd.GetId(), self.end)
        wx.EVT_BUTTON(self, self.btnPrevious.GetId(), self.previous_frame)
        wx.EVT_BUTTON(self, self.btnNext.GetId(), self.next_frame)

    def goto_frame(self, *args):
        f = wx.TextEntryDialog(self, "Enter Frame Number (1-" + str(self.parent.material.length) + ")")
        if f.ShowModal() == wx.ID_OK:
            frame = int(f.GetValue())
            if(frame < 1 or frame > self.parent.material.length):
                frame=0
            else:
                frame-=1
            self.set_frame(frame)
        return

    def exit(self, *args):
        self.Close(True)
        return

    def update_statusbar(self):
        self.statusbar.SetStatusText("Frame " + str(self.parent.material.current_frame()+1)\
            + " of " + str(self.parent.material.length))
        return

    def set_frame(self, frame):
        self.parent.material.set_frame(frame)
        self.parent.render()
        self.update_statusbar()
        return

    def play(self, *args):
        if self.parent.material.current_frame() == (self.parent.material.length-1):
            self.reset()
            
        while self.parent.material.current_frame() < (self.parent.material.length-1):
            self.next_frame()
        return

    def reset(self, *args):
        self.set_frame(0)
        return

    def end(self, *args):
        self.set_frame(self.parent.material.length-1)
        return

    def next_frame(self, *args):
        if self.parent.material:
            self.parent.material.advance_frame()
            self.parent.render()
            self.update_statusbar()
        return

    def previous_frame(self, *args):
        if self.parent.material:
            self.parent.material.backup_frame()
            self.parent.render()
            self.update_statusbar()
        return

    def dump_movie(self, *args):
        try:
            import Image
        except:
            print "PIL module not available,"\
                " thus screenshot not available"
            return

        filetypes = "PNG (*.png)|*.png|JPEG (*.jpg)|*.jpg|"\
            "GIF (*.gif)|*.gif|All Files (*.*)|*"

        f1 = wx.TextEntryDialog(self, "Enter Starting Frame Number (1-"\
            + str(self.parent.material.length) + ")", "Enter Starting Frame Number")
        if f1.ShowModal() == wx.ID_OK:
          start_frame = int(f1.GetValue())
        else:
          return

        f2 = wx.TextEntryDialog(self, "Enter Ending Frame Number (" + str(start_frame)\
            + "-" + str(self.parent.material.length) + ")", "Enter Ending Frame Number")
        if f2.ShowModal() == wx.ID_OK:
            end_frame = int(f2.GetValue())
        else:
          return

        if(start_frame < 1 or start_frame > (self.parent.material.length)):
            start_frame=0
        else:
            start_frame-=1
        if(end_frame <= start_frame or end_frame > self.parent.material.length):
            end_frame=self.parent.material.length

        d = wx.FileDialog(self,"Save Images As",os.getcwd(),"", filetypes,wx.SAVE) 
        if d.ShowModal() == wx.ID_OK:
            fname = d.GetFilename()
            prefix,suffix=fname.split('.')
            dir = d.GetDirectory()
            for n in range(start_frame, end_frame):
                self.set_frame(n)
                new_fname = prefix + "_" + str(n+1) + "." + suffix
                fullfilename = os.path.join(dir,new_fname)
                self.parent.canvas.dump_to_file(fullfilename)
        d.Destroy()
     
        return
#end of class Animation
