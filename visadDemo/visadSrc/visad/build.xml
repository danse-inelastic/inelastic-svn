<?xml version="1.0"?>

<project name="VisAD" default="init" basedir="..">
  <description>
Build script for VisAD core packages
$Id: build.xml,v 1.16 2008/08/30 16:41:55 brucef Exp $

    init             -- print ant configuration 

    deps             -- complie VisAD dependencies

    visad            -- compile the VisAD package
    visad.examples   -- compile the visad examples

    javadoc          -- generate javadoc for all packages

    dist             -- clean, compile, and jar the entire VisAD distribution
    
    jar              -- compile and jar the entire VisAD distribution
    jar.src          -- jar the source for the entire VisAD distribution
    jar.docs         -- jar javadoc
    jar.examples     -- jar examples (binary and source)

    clean            -- clean all files generated by this build script
    visad.clean      -- clean only visad package binaries


    dods             -- compile the dods package
    loci             -- compile the loci package
    HTTPClient       -- compile the HTTPClient package
    Jama             -- compile the Jama package 
    gnu              -- compile the gnu package
    ncsa             -- compile the ncsa package
    nom              -- compile the nom package
    ucar             -- compile the ucar package
    edu              -- compile the edu package

  </description>

  <!--
    Package include defenitions. 
    
    These are used to create filesets containing all files in 
    the given directories. The filesets are then filtered further
    for compiling, jaring, and javadocing.
  -->
  <patternset id="visad.package">
    <include name="edu/wisc/ssec/mcidas/**/*"/>
    <include name="visad/*"/>
    <include name="visad/bom/*"/>
    <include name="visad/browser/*"/>
    <include name="visad/collab/*"/>
    <include name="visad/data/*"/>
    <include name="visad/data/avi/*"/>
    <include name="visad/data/bio/*"/>
    <include name="visad/data/gif/*"/>
    <include name="visad/data/jai/*"/>
    <include name="visad/data/mcidas/*"/>
    <include name="visad/data/netcdf/*"/>
    <include name="visad/data/qt/*"/>
    <include name="visad/data/tiff/*"/>
    <include name="visad/data/units/*"/>
    <include name="visad/data/visad/*"/>
    <include name="visad/data/visad/object/*"/>
    <include name="visad/data/in/*"/>
    <include name="visad/data/dods/*"/>
    <include name="visad/data/netcdf/units/*"/>
    <include name="visad/data/netcdf/in/*"/>
    <include name="visad/data/netcdf/out/*"/>
    <include name="visad/data/fits/*"/>
    <include name="visad/data/vis5d/*"/>
    <include name="visad/data/biorad/*"/>
    <include name="visad/data/gis/*"/>
    <include name="visad/data/text/*"/>
    <include name="visad/data/hdfeos/*"/>
    <include name="visad/data/hdfeos/hdfeosc/*"/>
    <include name="visad/data/hdf5/hdf5objects/*"/>
    <include name="visad/data/hdf5/*"/>
  	<include name="visad/data/hrit/*"/>
    <include name="visad/data/amanda/*"/>
    <include name="visad/util/*"/>
    <include name="visad/java2d/*"/>
    <include name="visad/java3d/*"/>
    <include name="visad/cluster/*"/>
    <include name="visad/python/*"/>
    <include name="visad/matrix/*"/>
    <include name="visad/math/*"/>
    <include name="visad/formula/*"/>
    <include name="visad/ss/*"/>
    <include name="visad/jmet/*"/>
    <include name="visad/paoloa/*"/>
    <include name="visad/paoloa/spline/*"/>
    <include name="visad/aune/*"/>
    <include name="visad/benjamin/*"/>
    <include name="visad/rabin/*"/>
    <include name="visad/aeri/*"/>
    <include name="visad/georef/*"/>
    <include name="visad/meteorology/*"/>
    <include name="visad/install/*"/>
  </patternset>
  
  <patternset id="visad.examples.package">
    <include name="visad/examples/*"/>
  </patternset>

  <patternset id="Jama.package">
    <include name="Jama/**/*"/>
  </patternset>

  <patternset id="HTTPClient.package">
    <include name="HTTPClient/*"/>
  </patternset>
  
  <patternset id="ucar.package">
    <include name="ucar/multiarray/*"/>
    <include name="ucar/util/*"/>
    <include name="ucar/netcdf/*"/>
    <include name="ucar/tests/*"/>  
  </patternset>

  <patternset id="dods.package">
    <include name="dods/dap/*"/>
    <include name="dods/dap/parser/*"/>
    <include name="dods/dap/Server/*"/>
    <include name="dods/util/*"/>    
  </patternset>

  <patternset id="gnu.package">
    <include name="gnu/regexp/*"/>    
  </patternset>

  <patternset id="loci.package">
    <include name="loci/formats/*"/>
    <include name="loci/formats/codec/*"/>
    <include name="loci/formats/gui/*"/>
    <include name="loci/formats/in/*"/>
    <include name="loci/formats/out/*"/>
  </patternset>
  
  <patternset id="nom.package">
    <include name="nom/tam/fits/*"/>
    <include name="nom/tam/util/*"/>
    <include name="nom/tam/test/*"/>    
  </patternset>    

  <patternset id="edu.package">
    <include name="edu/wisc/ssec/mcidas/*"/>
    <include name="edu/wisc/ssec/mcidas/adde/*"/>    
  </patternset>

  <patternset id="ncsa.package">
    <include name="ncsa/hdf/hdf5lib/exceptions/*"/>
    <include name="ncsa/hdf/hdf5lib/*"/>
  </patternset>

  <!-- Non-java files to include in the distribution jar -->
  <patternset id="dist.nonjava.includes">
    <include name="visad/util/*.jhf" />
    <include name="visad/ss/*.gif" />
    <include name="loci/formats/readers.txt"/>
    <include name="loci/formats/writers.txt"/>
    <include name="DATE" />
  </patternset>

  <!-- Non-java files to include in the source jar -->
  <patternset id="src.nonjava.includes">
    <include name="visad/build.xml"/>
    <include name="visad/README"/>
    <include name="visad/DEDICATION"/>
    <include name="visad/NOTICE"/>
    <include name="visad/LICENSE"/>
    <include name="visad/DATE"/>
    <include name="visad/Makefile"/>
    <include name="visad/Makefile.WinNT"/>
    <include name="visad/README.nexusrmi"/>
    <include name="visad/rmic_script"/>
    <include name="visad/VisAD.Manifest"/>
    <include name="visad/examples/display_test.c"/>
    <include name="visad/python/*.py"/>
    <include name="visad/python/README.python"/>
    <include name="visad/browser/*.html"/>
    <include name="visad/browser/README.browser"/>
    <include name="visad/util/*.jhf"/>
    <include name="visad/ss/*.gif"/>
    <include name="visad/ss/README.ss"/>
    <include name="visad/data/units/*.jj"/>
    <include name="visad/data/in/package.html"/>
    <include name="visad/data/dods/package.html"/>
    <include name="HTTPClient/0*"/>
    <include name="HTTPClient/*.html"/>
    <include name="ucar/COPYRIGHT"/>
    <include name="ucar/VERSION"/>
    <include name="ucar/tests/test.nc"/>
    <include name="ucar/tests/test.out"/>
    <include name="visad/data/hdfeos/hdfeosc/*.c"/>
    <include name="visad/data/hdfeos/hdfeosc/*.h"/>
    <include name="visad/data/hdfeos/hdfeosc/Makefile"/>
    <include name="visad/data/mcidas/README.mcidas"/>
    <include name="visad/data/text/example1.txt"/>
    <include name="visad/data/text/example2.csv"/>
    <include name="visad/data/text/example3.txt"/>
    <include name="visad/data/text/README.text"/>
    <include name="visad/paoloa/README.paoloa"/>
    <include name="visad/paoloa/Makefile"/>
    <include name="visad/paoloa/*.f"/>
    <include name="visad/paoloa/*.c"/>
    <include name="visad/paoloa/*.h"/>
    <include name="visad/paoloa/spline/Makefile"/>
    <include name="visad/paoloa/spline/*.f"/>
    <include name="visad/paoloa/spline/*.c"/>
    <include name="visad/paoloa/spline/*.h"/>
    <include name="visad/aune/README.aune"/>
    <include name="visad/aune/Makefile"/>
    <include name="visad/aune/shsize.fcm"/>
    <include name="visad/aune/*.f"/>
    <include name="visad/aune/*.c"/>
    <include name="visad/aune/*.h"/>
    <include name="visad/benjamin/Makefile"/>
    <include name="visad/benjamin/*.f"/>
    <include name="visad/benjamin/*.c"/>
    <include name="visad/benjamin/*.h"/>
    <include name="visad/benjamin/switch.inp"/>
    <include name="visad/benjamin/*.table"/>
    <include name="visad/install/install_visad"/>
    <include name="visad/install/README"/>
    <include name="visad/install/README.html"/>
    <include name="visad/Gridded1D.txt"/>
    <include name="visad/Gridded2D.txt"/>
    <include name="visad/Gridded3D.txt"/>
    <include name="visad/data/gif/sseclogo.gif"/>
    <include name="visad/data/hdf5/COPYING"/>
    <include name="visad/data/hdfeos/README.hdfeos"/>
    <include name="visad/java3d/*.c"/>
    <include name="visad/java3d/Makefile"/>
  </patternset>

  <!-- filenames -->
  <property name="visad.jarfile" value="visad.jar" />
  <property name="deps.jarfile" value="visaddeps.jar"/>
  <property name="visad.src.jarfile" value="visad_src.jar"/>
  <property name="examples.jarfile" value="visad_examples.jar" />
  <property name="docs.jarfile" value="visad_doc.jar" />
  <property name="date.file" value="DATE"/>

  <!-- directory settings -->
  <property name="doc.dir" value="${basedir}/doc"/>
  <property name="visad.dir" value="${basedir}/visad"/>
  <property name="loci.dir" value="${basedir}/loci"/>
  <property name="dods.dir" value="${basedir}/dods"/>
  <property name="HTTPClient.dir" value="${basedir}/HTTPClient"/>
  <property name="Jama.dir" value="${basedir}/Jama"/>
  <property name="edu.dir" value="${basedir}/edu"/>
  <property name="gnu.dir" value="${basedir}/gnu"/>
  <property name="hdf5.dir" value="${basedir}/ncsa"/>
  <property name="fits.dir" value="${basedir}/nom"/>
  <property name="netcdf.dir" value="${basedir}/ucar"/>
  <!-- lib.dir is relative to the basedir -->
  <property name="lib.dir" value="${basedir}"/>

  <!-- compiler options -->
  <property name="source.ver" value="1.5"/>
  <property name="target.ver" value="1.5"/>
  <property name="debug.flag" value="true"/>
  <property name="deprecation.flag" value="off"/>
  <property name="fail.flag" value="true"/>
  <property name="max.mem" value="512M"/>

  <!-- javadoc options -->
  <property name="doc.level" value="protected"/>
  <!-- To overcome cmd.exe command line length limitation -->
  <property name="doc.use.file" value="yes"/>

  <!-- shared classpath -->
  <path id="project.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${basedir}"/>
  </path>




  <target name="init">
    <echo>
== ANT ======================= 
ant java version: ${ant.java.version}
ant lib dir: ${ant.library.dir}
ant home: ${ant.home}
ant basedir: ${basedir} 

== JAVA ======================
java home: ${java.home}
java version: ${java.runtime.version}
javadoc access: ${doc.level}
javadoc use file: ${doc.use.file}

== COMPILER OPTIONS ==========
source: ${source.ver}
target: ${target.ver}
debug(-g): ${debug.flag}
deprecation: ${deprecation.flag}
failonerror: ${fail.flag} 
visad Xmx: ${max.mem} 
    </echo>
  </target>




  <!-- compile dods folder -->
  <target name="dods" depends="init, ucar, gnu">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <patternset refid="dods.package"/>
      <classpath refid="project.classpath"/>
    </javac>
  </target>




  <!-- compile loci folder -->
  <target name="loci" depends="init">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
      <patternset refid="loci.package"/>
    </javac>
  </target>





  <!-- compile HTTPClient folder -->
  <target name="HTTPClient" depends="init">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
      <patternset refid="HTTPClient.package"/>
    </javac>
  </target>





  <!-- compile Jama folder --> 
  <target name="Jama" depends="init">
    <javac srcdir="${Jama.dir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
    </javac>
  </target>






  <!-- compile gnu folder -->
  <target name="gnu" depends="init">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <patternset refid="gnu.package"/>
      <classpath refid="project.classpath"/>
    </javac>
  </target>






  <!-- compile ncsa folder -->
  <target name="ncsa" depends="init">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <patternset refid="ncsa.package"/>
      <classpath refid="project.classpath"/>
    </javac>
  </target>






  <!-- compile ncsa folder -->
  <target name="nom" depends="init">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
      <patternset refid="nom.package"/>
    </javac>
  </target>






  <!-- compile ucar folder -->
  <target name="ucar" depends="init, HTTPClient">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
      <patternset refid="ucar.package"/>
    </javac>

    <rmic base="${basedir}" verify="true">
      <include name="ucar/netcdf/*Remote*Impl.class"/>
      <include name="ucar/netcdf/NetcdfServer*.class"/>
      <classpath refid="project.classpath"/>
    </rmic>

  </target>





  <!-- compile edu folder -->
  <target name="edu">
    <javac sourcepath=""
           srcdir="${basedir}" 
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
      <patternset refid="edu.package"/>
    </javac>
  </target>




  <!-- compile visad/examples folder -->
  <target name="visad.examples" depends="init, visad">
    <javac srcdir="${visad.dir}/examples"
           source="${source.ver}" 
           target="${target.ver}"
           debug="${debug.flag}"
           deprecation="${deprecation.flag}">
      <classpath refid="project.classpath"/>
    </javac>
  </target>






  <!-- compile all the visad dependancies -->
  <target name="deps" depends="init, loci, dods, nom, ncsa, gnu, Jama"/>



  <!-- same as jar except does a clean first -->
  <target name="dist" depends="clean">
    <antcall target="jar"/>
  </target>






  <!-- compile visad package -->
  <target name="visad" depends="init">

    <!-- compile visad -->
    <javac sourcepath=""
           srcdir="${basedir}"
           source="${source.ver}" 
           target="${target.ver}" 
           failonerror="${fail.flag}"
           debug="${debug.flag}" 
           deprecation="${deprecation.flag}"
           memoryMaximumSize="${max.mem}"
           fork="true">
      <classpath refid="project.classpath"/>
      <patternset refid="visad.package"/>
    </javac>

    <!-- generate RMI stubs -->
    <rmic base="${basedir}" verify="true">
      <include name="visad/**/*Remote*Impl.class"/>
      <classpath refid="project.classpath"/>
    </rmic>

  </target>




  <!-- Make the dist jar file -->
  <target name="jar" depends="init, deps, visad">

    <!-- write the DATE file -->
    <tstamp>
      <format property="date.value" pattern="EEE MMM dd HH:mm:ss zzz yyyy"/>
    </tstamp>
    <echo message="${date.value}" file="${basedir}/${date.file}"/>

    <!-- non-java files to include in jar -->
    <fileset dir="${basedir}" id="dist.nonjava.set">
      <patternset refid="dist.nonjava.includes"/>
    </fileset>
    <pathconvert property="dist.nonjava.includes" pathsep=" " refid="dist.nonjava.set"> 
      <map from="${basedir}/" to=""/> 
    </pathconvert> 
      
    <!-- java class files to include in jar -->
    <fileset dir="${basedir}" id="dist.java.set">
      <patternset refid="visad.package"/>
      <patternset refid="HTTPClient.package"/>
      <patternset refid="Jama.package"/>
      <patternset refid="dods.package"/>
      <patternset refid="loci.package"/>
      <patternset refid="gnu.package"/>
      <patternset refid="nom.package"/>
      <patternset refid="ucar.package"/>
      <patternset refid="edu.package"/>
      <patternset refid="ncsa.package"/>
      <filename name="**/*.class"/>
    </fileset>
    <pathconvert property="dist.java.includes" pathsep=" " refid="dist.java.set">
      <map from="${basedir}/" to=""/>
    </pathconvert>

    <!-- <echo>INCLUDES: ${java.includes} ${nonjava.includes}</echo> -->

    <!-- jar the class files -->
    <delete file="${visad.jarfile}"/>
    <jar destfile="${visad.jarfile}" 
         basedir="${basedir}" 
         includes="${dist.java.includes} ${dist.nonjava.includes}" 
         filesonly="true">
      <manifest>
        <attribute name="Main-Class" value="visad.ss.SpreadSheet"/>
      </manifest>
    </jar>
  </target>
	
	
  <target name="jar.deps" depends="deps" description="Jar everything but visad">

    <!-- non-java files to include in jar -->
    <fileset dir="${basedir}" id="dist.nonjava.set">
      <patternset refid="dist.nonjava.includes"/>
    </fileset>
    <pathconvert property="dist.nonjava.includes" pathsep=" " refid="dist.nonjava.set"> 
      <map from="${basedir}/" to=""/> 
    </pathconvert> 
      
    <!-- java class files to include in jar -->
    <fileset dir="${basedir}" id="dist.java.set">
      <patternset refid="HTTPClient.package"/>
      <patternset refid="Jama.package"/>
      <patternset refid="dods.package"/>
      <patternset refid="loci.package"/>
      <patternset refid="gnu.package"/>
      <patternset refid="nom.package"/>
      <patternset refid="ucar.package"/>
      <patternset refid="edu.package"/>
      <patternset refid="ncsa.package"/>
      <include name="**/*.class"/>
      <exclude name="**/*.java"/>
    </fileset>
    <pathconvert property="dist.java.includes" pathsep=" " refid="dist.java.set">
      <map from="${basedir}/" to=""/>
    </pathconvert>

    <!-- <echo>INCLUDES: ${java.includes} ${nonjava.includes}</echo> -->

    <!-- jar the class files -->
  	<delete file="${deps.jarfile}"/>
    <jar destfile="${deps.jarfile}" 
         basedir="${basedir}" 
         includes="${dist.java.includes} ${dist.nonjava.includes}" 
         filesonly="true">
    </jar>
  </target>



  <!-- make jar for all the source files -->
  <target name="jar.src" depends="init">

    <!-- write the DATE file -->
    <tstamp>
      <format property="date.value" pattern="EEE MMM dd HH:mm:ss zzz yyyy"/>
    </tstamp>
    <echo message="${date.value}" file="${basedir}/${date.file}"/>

    <!-- non-java files to include in jar -->
    <fileset dir="${basedir}" id="src.nonjava.set">
      <patternset refid="src.nonjava.includes"/>
    </fileset>
    <pathconvert property="src.nonjava.includes" pathsep=" " refid="src.nonjava.set"> 
      <map from="${basedir}/" to=""/> 
    </pathconvert> 
      
    <!-- java class files to include in jar -->
    <fileset dir="${basedir}" id="src.java.set">
      <patternset refid="visad.package"/>
      <patternset refid="HTTPClient.package"/>
      <patternset refid="dods.package"/>
      <patternset refid="loci.package"/>
      <patternset refid="gnu.package"/>
      <patternset refid="Jama.package"/>
      <patternset refid="nom.package"/>
      <patternset refid="ucar.package"/>
      <patternset refid="edu.package"/>
      <patternset refid="ncsa.package"/>
      <patternset refid="visad.examples.package"/>
      <filename name="**/*.java"/>
    </fileset>
    <pathconvert property="src.java.includes" pathsep=" " refid="src.java.set">
      <map from="${basedir}/" to=""/>
    </pathconvert>
       
    <!-- <echo>INCLUDES: ${nonjava.includes}</echo> -->
       
    <!-- jar the class files -->
    <delete file="${visad.src.jarfile}"/>
    <jar destfile="${visad.src.jarfile}" 
         basedir="${basedir}" 
         filesonly="true"
         includes="${src.nonjava.includes} ${src.java.includes}">
         
    </jar>
  </target>



  <target name="jar.examples" depends="init, visad, visad.examples">
    <delete file="${examples.jarfile}"/>  
    <jar destfile="${examples.jarfile}" basedir="${visad.dir}"
        includes="examples/*.java, examples/*.class, examples/display_test.c"/>
  </target>




  <target name="jar.docs" depends="init, javadoc">
    <delete file="${docs.jarfile}"/>  
    <jar destfile="${docs.jarfile}" basedir="${basedir}">
      <include name="doc/**"/>
    </jar>
  </target>





  <target name="javadoc" depends="init">
      
    <fileset dir="${basedir}" id="java.set">
      <patternset refid="visad.package"/>
      <patternset refid="HTTPClient.package"/>
      <patternset refid="dods.package"/>
      <patternset refid="Jama.package"/>
      <patternset refid="loci.package"/>
      <patternset refid="gnu.package"/>
      <patternset refid="nom.package"/>
      <patternset refid="ucar.package"/>
      <patternset refid="edu.package"/>
      <patternset refid="ncsa.package"/>
      <filename name="**/*.java"/>
    </fileset>
    
    <pathconvert property="javadoc.includes" pathsep="," refid="java.set">
      <map from="${basedir}/" to=""/>
    </pathconvert>
    
    <javadoc destdir="${doc.dir}" 
            source="${source.ver}"
            access="${doc.level}"
            use="true" 
            notree="false" 
            nonavbar="false" 
            noindex="false" 
            splitindex="true" 
            author="true" 
            version="true" 
            nodeprecatedlist="false" 
            nodeprecated="false" 
            sourcepath="${basedir}" 
            breakiterator="yes"
            doctitle="VisAD Documentation"
            sourcefiles="${javadoc.includes}"
            useexternalfile="${doc.use.file}">

      <link href="http://java.sun.com/products/java-media/3D/forDevelopers/J3D_1_3_API/j3dapi" />
      <link href="http://java.sun.com/j2se/1.4.2/docs/api" />
      <link href="http://logging.apache.org/log4j/docs/api" />

      <arg value="-J-Xmx512m"/>

      <classpath refid="project.classpath"/>
    </javadoc>
  </target>




  <target name="all" depends="init, clean, deps, visad, 
                              jar, jar.deps, javadoc, jar.src,
  							  jar.examples, jar.docs"/>





  <!-- Delete all files and dirs generated by this build script -->
  <target name="clean" depends="init, visad.clean, deps.clean">
    <delete failonerror="false">
      <fileset dir="${basedir}">
        <include name="${visad.jarfile}"/>
        <include name="${visad.src.jarfile}"/>
        <include name="${docs.jarfile}"/>
        <include name="${examples.jarfile}"/>
        <include name="${date.file}"/>
      </fileset>
    </delete>
    <delete dir="${doc.dir}" failonerror="false"/>
  </target>


  <target name="deps.clean" depends="init">
    <delete failonerror="false">
      <fileset dir="${basedir}" includes="${deps.jarfile}"/>
      <fileset dir="${loci.dir}" includes="**/*.class"/>
      <fileset dir="${HTTPClient.dir}" includes="**/*.class"/>
      <fileset dir="${dods.dir}" includes="**/*.class"/>
      <fileset dir="${Jama.dir}" includes="**/*.class"/>
      <fileset dir="${edu.dir}" includes="**/*.class"/>
      <fileset dir="${gnu.dir}" includes="**/*.class"/>
      <fileset dir="${hdf5.dir}" includes="**/*.class"/>
      <fileset dir="${fits.dir}" includes="**/*.class"/>
      <fileset dir="${netcdf.dir}" includes="**/*.class"/>
    </delete>
  </target>


  <!-- just cleans the VisAD package class files -->
  <target name="visad.clean" depends="init">
    <delete>
      <fileset dir="${visad.dir}" includes="**/*.class"/>
    </delete>
  </target>



</project>
