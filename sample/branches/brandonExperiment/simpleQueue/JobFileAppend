#!/usr/bin/env python
################################################################################
#
#       File:   JobFileAppend
#       Author: Alexander Schliep (schliep@zpr.uni-koeln.de)
#
#       This is part of PBQ - The Python Batch Queue. 
#
#       Copyright (C) 1998-1999, Alexander Schliep
#       For Information see http://www.zpr.uni-koeln.de/~schliep/PBQ
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
# 
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
# 
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
################################################################################
#
# Append all lines of file fileName to file jobFile, while performing
# locking.
#
# Synopsis: JobFileAppend jobFileName appendFileName
# 
#
import os
import sys
import fcntl

if len(sys.argv) < 3:
    print "Error: Need to specify jobfile appendFile"
    sys.exit(1)
jobFileName = sys.argv[1]
appendFileName = sys.argv[2]

try:
    appendFile = open(appendFileName, 'r')
    lines = appendFile.readlines()
    appendFile.close()
except:
    print "error reading from ", appendFileName
    sys.exit(1)


try:
    jobFile = open(jobFileName,'a+')
except:
     print "error opening ", jobFileName
   
fcntl.flock(jobFile.fileno(),fcntl.LOCK_EX)
for line in lines:
    jobFile.write(line)	
jobFile.close()
